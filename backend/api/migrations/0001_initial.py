# Generated by Django 5.1.1 on 2025-08-09 19:03

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BuyingAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommonInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_rate', models.FloatField(default=0)),
                ('cost_per_pound', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='EvidenceImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.CharField(max_length=200, null=True)),
                ('image_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('link', models.URLField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('home_address', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=20)),
                ('is_agent', models.BooleanField(default=False)),
                ('is_accountant', models.BooleanField(default=False)),
                ('is_buyer', models.BooleanField(default=False)),
                ('is_logistical', models.BooleanField(default=False)),
                ('is_comunity_manager', models.BooleanField(default=False)),
                ('agent_profit', models.FloatField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_verification_email', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('password_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='Encargado', max_length=100)),
                ('pay_status', models.CharField(default='No pagado', max_length=100)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.customuser')),
                ('sales_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_orders', to='api.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='DeliverReceip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField()),
                ('status', models.CharField(default='Enviado', max_length=100)),
                ('deliver_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('deliver_picture', models.ManyToManyField(to='api.evidenceimages')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_receipts', to='api.order')),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_name', models.CharField(max_length=100)),
                ('number_of_tracking', models.CharField(max_length=100)),
                ('status_of_processing', models.CharField(default='Enviado', max_length=100)),
                ('package_picture', models.ManyToManyField(to='api.evidenceimages')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sku', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('link', models.URLField(blank=True, null=True)),
                ('description', models.TextField(max_length=200, null=True)),
                ('observation', models.TextField(max_length=200, null=True)),
                ('category', models.CharField(max_length=200, null=True)),
                ('amount_requested', models.IntegerField()),
                ('status', models.CharField(default='Encargado', max_length=100)),
                ('shop_cost', models.FloatField()),
                ('shop_delivery_cost', models.FloatField(default=0)),
                ('shop_taxes', models.FloatField(default=0)),
                ('own_taxes', models.FloatField(default=0)),
                ('added_taxes', models.FloatField(default=0)),
                ('total_cost', models.FloatField(default=0)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='api.order')),
                ('product_pictures', models.ManyToManyField(to='api.evidenceimages')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shop')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReceived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reception_date_in_eeuu', models.DateField(default=django.utils.timezone.now)),
                ('reception_date_in_cuba', models.DateField(blank=True, null=True)),
                ('amount_received', models.IntegerField()),
                ('amount_delivered', models.IntegerField(default=0)),
                ('observation', models.TextField(max_length=200, null=True)),
                ('deliver_receip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivered_products', to='api.deliverreceip')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recieved_products', to='api.order')),
                ('original_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivers', to='api.product')),
                ('package_where_was_send', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contained_products', to='api.package')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingReceip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_of_shopping', models.CharField(default='No pagado', max_length=100)),
                ('buy_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('shop_of_buy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buys', to='api.shop')),
                ('shopping_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buys', to='api.buyingaccounts')),
            ],
        ),
        migrations.CreateModel(
            name='ProductBuyed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_cost_of_product', models.FloatField(default=0)),
                ('shop_discount', models.FloatField(default=0)),
                ('offer_discount', models.FloatField(default=0)),
                ('buy_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount_buyed', models.IntegerField()),
                ('observation', models.TextField(max_length=200, null=True)),
                ('real_cost_of_product', models.FloatField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyed_products', to='api.order')),
                ('original_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buys', to='api.product')),
                ('shoping_receip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyed_products', to='api.shoppingreceip')),
            ],
        ),
    ]
