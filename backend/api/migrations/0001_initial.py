# Generated by Django 5.1.1 on 2025-11-01 15:00

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('shipping_cost_per_pound', models.FloatField(default=0, help_text='Costo de envío por libra para esta categoría')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CommonInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_rate', models.FloatField(default=0)),
                ('cost_per_pound', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Información Común',
                'verbose_name_plural': 'Información Común',
            },
        ),
        migrations.CreateModel(
            name='EvidenceImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.CharField(blank=True, max_length=200, null=True)),
                ('image_url', models.URLField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Evidence Image',
                'verbose_name_plural': 'Evidence Images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('link', models.URLField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tax_rate', models.FloatField(default=0.0, help_text='Tasa de impuestos para esta tienda')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email')),
                ('name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('home_address', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('role', models.CharField(choices=[('user', 'Usuario'), ('agent', 'Agente'), ('accountant', 'Contador'), ('buyer', 'Comprador'), ('logistical', 'Logístico'), ('community_manager', 'Community Manager'), ('admin', 'Administrador'), ('client', 'Cliente')], default='client', max_length=20)),
                ('agent_profit', models.FloatField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_verification_email', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('password_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_agent', models.ForeignKey(blank=True, help_text='Agente asignado para este cliente', limit_choices_to={'role': 'agent'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_clients', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('order_created', 'Orden creada'), ('order_status_changed', 'Estado de orden cambiado'), ('order_assigned', 'Orden asignada'), ('order_completed', 'Orden completada'), ('order_cancelled', 'Orden cancelada'), ('product_added', 'Producto añadido'), ('product_purchased', 'Producto comprado'), ('product_received', 'Producto recibido'), ('product_delivered', 'Producto entregado'), ('product_out_of_stock', 'Producto agotado'), ('payment_received', 'Pago recibido'), ('payment_pending', 'Pago pendiente'), ('payment_overdue', 'Pago vencido'), ('package_shipped', 'Paquete enviado'), ('package_in_transit', 'Paquete en tránsito'), ('package_delivered', 'Paquete entregado'), ('package_delayed', 'Paquete retrasado'), ('user_registered', 'Usuario registrado'), ('user_verified', 'Usuario verificado'), ('user_role_changed', 'Rol de usuario cambiado'), ('system_message', 'Mensaje del sistema'), ('system_alert', 'Alerta del sistema'), ('system_maintenance', 'Mantenimiento del sistema')], max_length=50, verbose_name='Tipo')),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', max_length=20, verbose_name='Prioridad')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('action_url', models.CharField(blank=True, max_length=500, null=True, verbose_name='URL de acción')),
                ('is_read', models.BooleanField(default=False, verbose_name='Leída')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Leída en')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadata')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Creada en')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Las notificaciones pueden expirar automáticamente', null=True, verbose_name='Expira en')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Destinatario')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Remitente')),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('order_created', 'Orden creada'), ('order_status_changed', 'Estado de orden cambiado'), ('order_assigned', 'Orden asignada'), ('order_completed', 'Orden completada'), ('order_cancelled', 'Orden cancelada'), ('product_added', 'Producto añadido'), ('product_purchased', 'Producto comprado'), ('product_received', 'Producto recibido'), ('product_delivered', 'Producto entregado'), ('product_out_of_stock', 'Producto agotado'), ('payment_received', 'Pago recibido'), ('payment_pending', 'Pago pendiente'), ('payment_overdue', 'Pago vencido'), ('package_shipped', 'Paquete enviado'), ('package_in_transit', 'Paquete en tránsito'), ('package_delivered', 'Paquete entregado'), ('package_delayed', 'Paquete retrasado'), ('user_registered', 'Usuario registrado'), ('user_verified', 'Usuario verificado'), ('user_role_changed', 'Rol de usuario cambiado'), ('system_message', 'Mensaje del sistema'), ('system_alert', 'Alerta del sistema'), ('system_maintenance', 'Mantenimiento del sistema')], max_length=50, verbose_name='Tipo')),
                ('title', models.CharField(max_length=200, verbose_name='Título agrupado')),
                ('count', models.IntegerField(default=1, verbose_name='Cantidad')),
                ('aggregated_data', models.JSONField(default=list, verbose_name='Datos agregados')),
                ('is_read', models.BooleanField(default=False, verbose_name='Leído')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_first', to='api.notification', verbose_name='Primera notificación')),
                ('last_notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_last', to='api.notification', verbose_name='Última notificación')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_groups', to=settings.AUTH_USER_MODEL, verbose_name='Destinatario')),
            ],
            options={
                'verbose_name': 'Grupo de notificaciones',
                'verbose_name_plural': 'Grupos de notificaciones',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled_notification_types', models.JSONField(blank=True, default=list, help_text='Lista de tipos de notificación que el usuario desea recibir', verbose_name='Tipos de notificación habilitados')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Notificaciones por email')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Notificaciones push')),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Inmediato'), ('daily', 'Diario'), ('weekly', 'Semanal'), ('never', 'Nunca')], default='immediate', max_length=20, verbose_name='Frecuencia de resumen')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Preferencia de notificación',
                'verbose_name_plural': 'Preferencias de notificación',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Encargado', 'Encargado'), ('Procesando', 'Procesando'), ('Completado', 'Completado'), ('Cancelado', 'Cancelado')], default='Encargado', max_length=100)),
                ('pay_status', models.CharField(choices=[('No pagado', 'No pagado'), ('Pagado', 'Pagado'), ('Parcial', 'Parcial')], default='No pagado', max_length=100)),
                ('observations', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('sales_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliverReceip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField()),
                ('status', models.CharField(choices=[('Pendiente', 'Pendiente'), ('En transito', 'En transito'), ('Entregado', 'Entregado'), ('Fallida', 'Fallida')], default='Pendiente', max_length=100)),
                ('deliver_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('weight_cost', models.FloatField(default=0)),
                ('manager_profit', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deliver_picture', models.ManyToManyField(blank=True, to='api.evidenceimages')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_receipts', to='api.order')),
            ],
            options={
                'verbose_name': 'Recibo de Entrega',
                'verbose_name_plural': 'Recibos de Entrega',
                'ordering': ['-deliver_date'],
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_name', models.CharField(max_length=100)),
                ('number_of_tracking', models.CharField(max_length=100, unique=True)),
                ('status_of_processing', models.CharField(choices=[('Enviado', 'Enviado'), ('Recibido', 'Recibido'), ('Procesado', 'Procesado')], default='Enviado', max_length=100)),
                ('arrival_date', models.DateField(default=django.utils.timezone.now, help_text='Fecha de llegada del paquete')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('package_picture', models.ManyToManyField(blank=True, to='api.evidenceimages')),
            ],
            options={
                'verbose_name': 'Paquete',
                'verbose_name_plural': 'Paquetes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sku', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=100)),
                ('link', models.URLField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('observation', models.TextField(blank=True, max_length=200, null=True)),
                ('amount_requested', models.IntegerField()),
                ('amount_purchased', models.IntegerField(default=0, help_text='Cantidad total de productos comprados')),
                ('amount_delivered', models.IntegerField(default=0, help_text='Cantidad total de productos entregados')),
                ('status', models.CharField(choices=[('Encargado', 'Encargado'), ('Comprado', 'Comprado'), ('Recibido', 'Recibido'), ('Entregado', 'Entregado')], default='Encargado', max_length=100)),
                ('shop_cost', models.FloatField()),
                ('shop_delivery_cost', models.FloatField(default=0)),
                ('shop_taxes', models.FloatField(default=0)),
                ('own_taxes', models.FloatField(default=0)),
                ('added_taxes', models.FloatField(default=0)),
                ('total_cost', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.category')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='api.order')),
                ('product_pictures', models.ManyToManyField(blank=True, to='api.evidenceimages')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shop')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reception', models.DateField(blank=True, null=True)),
                ('amount_delivered', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deliver_receip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivered_products', to='api.deliverreceip')),
                ('original_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivers', to='api.product')),
            ],
            options={
                'verbose_name': 'Producto Entregado',
                'verbose_name_plural': 'Productos Entregados',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductReceived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_received', models.IntegerField(default=1)),
                ('observation', models.TextField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('original_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiveds', to='api.product')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='package_products', to='api.package')),
            ],
            options={
                'verbose_name': 'Producto Recibido',
                'verbose_name_plural': 'Productos Recibidos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BuyingAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buying_accounts', to='api.shop')),
            ],
            options={
                'verbose_name': 'Cuenta de Compra',
                'verbose_name_plural': 'Cuentas de Compra',
                'ordering': ['account_name'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingReceip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_of_shopping', models.CharField(choices=[('No pagado', 'No pagado'), ('Pagado', 'Pagado'), ('Parcial', 'Parcial')], default='No pagado', max_length=100)),
                ('buy_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shop_of_buy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buys', to='api.shop')),
                ('shopping_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buys', to='api.buyingaccounts')),
            ],
            options={
                'verbose_name': 'Recibo de Compra',
                'verbose_name_plural': 'Recibos de Compra',
                'ordering': ['-buy_date'],
            },
        ),
        migrations.CreateModel(
            name='ProductBuyed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_cost_of_product', models.FloatField(default=0)),
                ('shop_discount', models.FloatField(default=0)),
                ('offer_discount', models.FloatField(default=0)),
                ('buy_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount_buyed', models.IntegerField()),
                ('observation', models.TextField(blank=True, max_length=200, null=True)),
                ('real_cost_of_product', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('original_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buys', to='api.product')),
                ('shoping_receip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buyed_products', to='api.shoppingreceip')),
            ],
            options={
                'verbose_name': 'Producto Comprado',
                'verbose_name_plural': 'Productos Comprados',
                'ordering': ['-buy_date'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', '-created_at'], name='notif_recip_created_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read'], name='notif_recip_read_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read', '-created_at'], name='notif_recip_read_created_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notif_type_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', '-created_at'], name='notif_priority_created_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read', 'priority'], name='notif_unread_priority_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['expires_at'], name='notif_expires_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['content_type', 'object_id'], name='notif_content_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationgroup',
            index=models.Index(fields=['recipient', 'notification_type', '-updated_at'], name='api_notific_recipie_b9e888_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationgroup',
            index=models.Index(fields=['recipient', 'is_read'], name='api_notific_recipie_e7327c_idx'),
        ),
    ]
