# =============================================================================
# SCRIPT DE BUILD Y DEPLOYMENT PARA CLOUDFLARE PAGES - WINDOWS
# =============================================================================

Write-Host "üöÄ Iniciando proceso de build para Cloudflare Pages..." -ForegroundColor Green

# Verificar que estamos en el directorio correcto
if (!(Test-Path "package.json")) {
    Write-Host "‚ùå Error: No se encontr√≥ package.json. Ejecuta desde el directorio admin." -ForegroundColor Red
    exit 1
}

Write-Host "üìã Verificando dependencias..." -ForegroundColor Yellow

# Verificar que pnpm est√° instalado
try {
    $pnpmVersion = pnpm --version
    Write-Host "‚úÖ pnpm versi√≥n: $pnpmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Error: pnpm no est√° instalado." -ForegroundColor Red
    exit 1
}

# Limpiar instalaciones previas
Write-Host "üßπ Limpiando archivos anteriores..." -ForegroundColor Yellow
if (Test-Path "node_modules") {
    Remove-Item -Recurse -Force "node_modules"
}
if (Test-Path "dist") {
    Remove-Item -Recurse -Force "dist"
}
if (Test-Path "pnpm-lock.yaml") {
    Remove-Item -Force "pnpm-lock.yaml"
}

# Instalar dependencias
Write-Host "üì¶ Instalando dependencias..." -ForegroundColor Yellow
pnpm install

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error instalando dependencias" -ForegroundColor Red
    exit 1
}

# Verificar variables de entorno
Write-Host "üîß Verificando variables de entorno..." -ForegroundColor Yellow
if (!(Test-Path ".env.production")) {
    Write-Host "‚ùå Error: No se encontr√≥ .env.production" -ForegroundColor Red
    exit 1
}

# Ejecutar lint
Write-Host "üîç Ejecutando lint..." -ForegroundColor Yellow
pnpm lint:fix

# Ejecutar type check
Write-Host "üìù Verificando tipos TypeScript..." -ForegroundColor Yellow
pnpm type-check

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error en verificaci√≥n de tipos" -ForegroundColor Red
    exit 1
}

# Build para producci√≥n
Write-Host "üèóÔ∏è  Ejecutando build de producci√≥n..." -ForegroundColor Yellow
$env:NODE_ENV="production"
pnpm build

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error en el build" -ForegroundColor Red
    exit 1
}

# Verificar que el build se complet√≥
if (!(Test-Path "dist")) {
    Write-Host "‚ùå Error: No se gener√≥ la carpeta dist" -ForegroundColor Red
    exit 1
}

# Mostrar informaci√≥n del build
Write-Host "üìä Informaci√≥n del build:" -ForegroundColor Cyan
$distSize = (Get-ChildItem -Recurse "dist" | Measure-Object -Property Length -Sum).Sum
$distSizeMB = [math]::Round($distSize / 1MB, 2)
Write-Host "   Tama√±o total: $distSizeMB MB" -ForegroundColor White

# Mostrar archivos principales
Write-Host "üìÅ Archivos principales generados:" -ForegroundColor Cyan
Get-ChildItem "dist" -Recurse -Name | Where-Object { $_ -match "\.(js|css|html)$" } | ForEach-Object {
    $size = (Get-Item "dist/$_").Length
    $sizeMB = [math]::Round($size / 1MB, 3)
    Write-Host "   $_`: $sizeMB MB" -ForegroundColor White
}

Write-Host ""
Write-Host "‚úÖ Build completado exitosamente!" -ForegroundColor Green
Write-Host "üìÅ Los archivos est√°n listos en la carpeta 'dist'" -ForegroundColor Green
Write-Host ""
Write-Host "üìù Pr√≥ximos pasos para deployment:" -ForegroundColor Yellow
Write-Host "   1. Conecta tu repositorio a Cloudflare Pages" -ForegroundColor White
Write-Host "   2. Configura las variables de entorno en Cloudflare" -ForegroundColor White
Write-Host "   3. Establece el comando de build: 'pnpm build'" -ForegroundColor White
Write-Host "   4. Establece el directorio de output: 'dist'" -ForegroundColor White
Write-Host "   5. Establece el directorio root: 'apps/admin'" -ForegroundColor White